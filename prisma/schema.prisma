// COnecta ao banco de dados 
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
// constroe a tabela users 1 user pode ter muitos profiles e muitos jogos
model Users {
  id       Int            @id @default(autoincrement())
  name     String
  lastName String
  email    String         @unique
  password String
  cpf      String         @unique
  admin    Boolean        
  profiles Profiles[]
}



model GenresOnGames {
  genreId Int
  genre   Genres @relation(fields: [genreId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId  Int
  game    Games  @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([genreId, gameId])
}

model Genres {
  id     Int             @id @default(autoincrement())
  name   String          @unique
  games  GenresOnGames[]
}
model Games {
  id          Int             @id @default(autoincrement())
  title       String          @unique
  cover       String          @unique
  description String
  year        Int
  IMDB        Float
  trailer     String          @unique
  gameplay    String          @unique
  genre       GenresOnGames[]
  users       GamesOnProfiles[]
}

model Profiles {
  id     Int    @id @default(autoincrement())
  title  String
  image  String
  userId Int    
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  games    GamesOnProfiles[]
}

model GamesOnProfiles{
  profileId Int
  profile   Profiles @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gameId Int
  game   Games @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([profileId, gameId])
}